buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        jcenter()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-tomcat-plugin:2.2.3'
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.7.RELEASE")
    }
}

repositories {
    jcenter()
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'com.bmuschko.tomcat'
/*apply plugin: 'com.bmuschko.tomcat-base'*/
apply plugin: 'spring-boot'
apply plugin: 'war'


group = 'accenture.trainings.spring.mvc'

sourceCompatibility = 1.8
targetCompatibility = 1.8

[tomcatRun, tomcatRunWar]*.contextPath = '/'
[tomcatRun, tomcatRunWar]*.reloadable = true
[tomcatRun, tomcatRunWar]*.configFile = file('src/main/webapp/META-INF/context.xml')
[tomcatRun, tomcatRunWar]*.httpPort = 8080
[tomcatRun, tomcatRunWar, tomcatStop]*.stopPort = 8081
[tomcatRun, tomcatStop]*.stopKey = 'stopKey'

test {
    exclude '**/*CucumberTest.*'
    include '**/controller/AppControllerTest'
}

task integrationTest(type: Test) {
    include '**/CucumberTest'
    doFirst {
        println "Start tomcat container"
        tomcatRun.daemon = true
        tomcatRun.execute()
    }
    doLast {
        println "Stop tomcat container"
        tomcatStop.execute()
    }
}
war{
    baseName = 'task_01'
    version =  '0.0.1-SNAPSHOT'
}
if (!hasProperty('mainClass')) {
    ext.mainClass = 'accenture.trainings.spring.mvc.Application'
}

sourceSets {
    main {
        java {
            srcDir '/src/main/java'
        }
        resources {
            srcDir '/src/main/resources'
            include '**/*.xml'
        }
    }

    integrationTest {
            java {
                srcDir file('src/test/java')
            }
            resources {
                srcDir file('src/test/resources')
            }
        }

}

repositories {
    mavenCentral()
    maven { url "http://repo.maven.apache.org/maven2" }
    maven { url "http://mvnrepository.com"}
}
sourceSets.test.output.resourcesDir = sourceSets.test.output.classesDir
dependencies {
    def springVersion='4.0.0.RELEASE'
    compile "org.springframework:spring-context:${springVersion}"
    compile "org.springframework:spring-aop:${springVersion}"
    compile "org.springframework:spring-webmvc:${springVersion}"
    compile "org.springframework:spring-web:${springVersion}"
    compile 'javax.servlet:jstl:1.2'
    compile 'commons-logging:commons-logging:1.1.3'
    testCompile 'org.springframework:spring-test:3.2.3.RELEASE'
    testCompile 'junit:junit:4.11'
    testCompile 'org.mockito:mockito-all:1.9.5'
    compile 'commons-io:commons-io:2.4'
    compile("org.springframework.boot:spring-boot-starter-web:1.2.7.RELEASE")
    testCompile("org.springframework.boot:spring-boot-starter-test:1.2.7.RELEASE")
    compile("org.springframework.boot:spring-boot-starter-actuator:1.2.7.RELEASE")
    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat:1.2.7.RELEASE")
    testCompile("junit:junit: 4.12")
    testCompile("info.cukes:cucumber-core:1.2.4")
    testCompile("info.cukes:cucumber-java8:1.2.4")
    testCompile("info.cukes:cucumber-junit:1.2.4")
    testCompile("info.cukes:cucumber-spring:1.2.4")
    def tomcatVersion = '7.0.59'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"

}
tomcat {
    httpPort = 8080
    httpsPort = 8091
    enableSSL = true
    contextPath = '/'

}
check.dependsOn integrationTest
tasks.withType(Test) {
    testLogging {
        events 'passed'
    }
}
task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}
